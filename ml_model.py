import joblib
import os

# –ü–æ–≤–Ω–∏–π —à–ª—è—Ö –¥–æ –º–æ–¥–µ–ª—ñ
model_path = os.path.join(os.path.dirname(__file__), 'phishing_model.pkl')

# üîÅ –Ø–∫—â–æ –º–æ–¥–µ–ª—å –≤—ñ–¥—Å—É—Ç–Ω—è ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç–∏ train_model
if not os.path.exists(model_path):
    print("‚ö†Ô∏è –ú–æ–¥–µ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ù–∞–≤—á–∞–Ω–Ω—è –∑ –Ω—É–ª—è...")
    from train_model import *  # —ñ–º–ø–æ—Ä—Ç—É—î —ñ –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–¥—Ä–∞–∑—É (–±–æ –≤ train_model –≤—Å–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ñ–π –æ–±–ª–∞—Å—Ç—ñ)
else:
    print("‚úÖ –ú–æ–¥–µ–ª—å –∑–Ω–∞–π–¥–µ–Ω–æ ‚Äî –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è...")

# –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –º–æ–¥–µ–ª—å
model = joblib.load(model_path)

def predict_phishing(text):
    if not text.strip():
        return 0.0
    # –ú–æ–¥–µ–ª—å ‚Äî —Ü–µ Pipeline, –≤–æ–Ω–∞ —Å–∞–º–∞ –≤–µ–∫—Ç–æ—Ä–∏–∑—É—î —Ç–µ–∫—Å—Ç
    proba = model.predict_proba([text])[0][1]
    return round(proba * 100, 2)
